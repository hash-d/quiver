#!/usr/bin/env python3
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

import os
import sys

home = os.environ.get("QUIVER_HOME", "@default_home@")
sys.path.insert(0, os.path.join(home, "python"))

import brokerlib
import collections
import uuid

from plano import *
from quiver.server import *
from quiver.server import __version__

def main():
    enable_logging("warn")

    if len(ARGS) == 1:
        print("Quiver's builtin message broker {}".format(__version__))
        print(__file__)
        print("Python {}".format(" ".join(sys.version.split())))
        exit()

    kwargs = parse_keyword_args(ARGS[1:])

    host = kwargs["host"]
    port = kwargs["port"]
    path = kwargs["path"]
    ready_file = kwargs["ready-file"]
    user = kwargs.get("user")
    password = kwargs.get("password")
    cert = kwargs.get("cert")
    key = kwargs.get("key")
    trust = kwargs.get("trust-store")
    quiet = kwargs.get("quiet")
    verbose = kwargs.get("verbose")

    broker = BuiltinBroker(host, port, path, ready_file,
                           user=user,
                           password=password,
                           cert=cert,
                           key=key,
                           trust=trust,
                           quiet=quiet,
                           verbose=verbose)

    broker.init()
    broker.run()

class BuiltinBroker(brokerlib.Broker):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.id = "quiver-server-builtin"

        if self.ready_file == "-":
            self.ready_file = None

    def __repr__(self):
        return self.__class__.__name__

    def init(self):
        if self.quiet:
            enable_logging("error")

        if self.verbose:
            enable_logging("notice")

        super().init()

    def info(self, message, *args):
        notice(message, *args)

    def notice(self, message, *args):
        notice(message, *args)

    def warn(self, message, *args):
        warn(message, *args)

    def error(self, message, *args):
        error(message, *args)

    def fail(self, message, *args):
        fail(message, *args)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
